# SIEM_WAZUH
Installing prerequisites
Some extra packages are needed for the installation, such as curl or unzip, which will be used in further steps. However, this step can be skipped if curl and unzip are already installed on the server.



Install all the necessary packages:
yum install zip unzip curl
Installing Elasticsearch
Elasticsearch is a highly scalable full-text search and analytics engine.

Adding the Elastic Stack repository


Import the GPG key:


rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
Add the repository:


cat > /etc/yum.repos.d/elastic.repo << EOF
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF
Elasticsearch installation and configuration
Install the Elasticsearch package:




yum install elasticsearch-7.17.9
Download the configuration file /etc/elasticsearch/elasticsearch.yml as follows:


curl -so /etc/elasticsearch/elasticsearch.yml https://packages.wazuh.com/4.4/tpl/elastic-basic/elasticsearch_all_in_one.yml
Certificates creation and deployment
Download the configuration file for creating the certificates:


curl -so /usr/share/elasticsearch/instances.yml https://packages.wazuh.com/4.4/tpl/elastic-basic/instances_aio.yml
In the following steps, a file that contains a folder named after the instance defined here will be created. This folder will contain the certificates and the keys necessary to communicate with the Elasticsearch node using SSL.

The certificates can be created using the elasticsearch-certutil tool:


/usr/share/elasticsearch/bin/elasticsearch-certutil cert ca --pem --in instances.yml --keep-ca-key --out ~/certs.zip
Extract the generated /usr/share/elasticsearch/certs.zip file from the previous step.


unzip ~/certs.zip -d ~/certs
The next step is to create the directory /etc/elasticsearch/certs, and then copy the CA file, the certificate and the key there:


mkdir /etc/elasticsearch/certs/ca -p
cp -R ~/certs/ca/ ~/certs/elasticsearch/* /etc/elasticsearch/certs/
chown -R elasticsearch: /etc/elasticsearch/certs
chmod -R 500 /etc/elasticsearch/certs
chmod 400 /etc/elasticsearch/certs/ca/ca.* /etc/elasticsearch/certs/elasticsearch.*
rm -rf ~/certs/ ~/certs.zip
Enable and start the Elasticsearch service:




systemctl daemon-reload
systemctl enable elasticsearch
systemctl start elasticsearch
Generate credentials for all the Elastic Stack pre-built roles and users:


/usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto
The command above will prompt an output like this. Save the password of the elastic user for further steps:

Output
Changed password for user apm_system
PASSWORD apm_system = lLPZhZkB6oUOzzCrkLSF

Changed password for user kibana_system
PASSWORD kibana_system = TaLqVOnSoqKTYLIU0vDn

Changed password for user kibana
PASSWORD kibana = TaLqVOvXoqKTYLIU0vDn

Changed password for user logstash_system
PASSWORD logstash_system = UtuDv2tWkXGYL83v9kWA

Changed password for user beats_system
PASSWORD beats_system = qZcbvCslafMpoEOrE9Ob

Changed password for user remote_monitoring_user
PASSWORD remote_monitoring_user = LzJpQiSylncmCU2GLBTS

Changed password for user elastic
PASSWORD elastic = AN4UeQGA7HGl5iHpMla7
To check that the installation was made successfully, run the following command replacing <elastic_password> with the password generated in the previous step for elastic user:


curl -XGET https://localhost:9200 -u elastic:<elastic_password> -k
This command should have an output like this:

Output
{
  "name" : "elasticsearch",
  "cluster_name" : "elasticsearch",
  "cluster_uuid" : "CFw_rkxnR7avI7pBv9MvtQ",
  "version" : {
    "number" : "7.17.9",
    "build_flavor" : "default",
    "build_type" : "rpm",
    "build_hash" : "ef48222227ee6b9e70e502f0f0daa52435ee634d",
    "build_date" : "2023-01-31T05:34:43.305517834Z",
    "build_snapshot" : false,
    "lucene_version" : "8.11.1",
    "minimum_wire_compatibility_version" : "6.8.0",
    "minimum_index_compatibility_version" : "6.0.0-beta1"
  },
  "tagline" : "You Know, for Search"
}
Installing Wazuh server
The Wazuh server collects and analyzes data from deployed agents. It runs the Wazuh manager, the Wazuh API and Filebeat. The first step in setting up Wazuh is to add the Wazuh repository to the server. Alternatively, the Wazuh manager package can be downloaded directly, and compatible versions can be checked here.

Adding the Wazuh repository


Import the GPG key:


rpm --import https://packages.wazuh.com/key/GPG-KEY-WAZUH
Add the repository:


cat > /etc/yum.repos.d/wazuh.repo << EOF
[wazuh]
gpgcheck=1
gpgkey=https://packages.wazuh.com/key/GPG-KEY-WAZUH
enabled=1
name=EL-\$releasever - Wazuh
baseurl=https://packages.wazuh.com/4.x/yum/
protect=1
EOF
Installing the Wazuh manager
Install the Wazuh manager package:




yum install wazuh-manager
Enable and start the Wazuh manager service:




systemctl daemon-reload
systemctl enable wazuh-manager
systemctl start wazuh-manager
Run the following command to check if the Wazuh manager is active:




systemctl status wazuh-manager
Installing Filebeat
Filebeat is the tool on the Wazuh server that securely forwards alerts and archived events to Elasticsearch.

Filebeat installation and configuration
Install the Filebeat package:




yum install filebeat-7.17.9
Download the pre-configured Filebeat config file used to forward Wazuh alerts to Elasticsearch:


curl -so /etc/filebeat/filebeat.yml https://packages.wazuh.com/4.4/tpl/elastic-basic/filebeat_all_in_one.yml
Download the alerts template for Elasticsearch:


curl -so /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/4.4/extensions/elasticsearch/7.x/wazuh-template.json
chmod go+r /etc/filebeat/wazuh-template.json
Download the Wazuh module for Filebeat:


curl -s https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.2.tar.gz | tar -xvz -C /usr/share/filebeat/module
Edit the file /etc/filebeat/filebeat.yml and add the following line:


output.elasticsearch.password: <elasticsearch_password>
Replace elasticsearch_password with the previously generated password for elastic user.

Copy the certificates into /etc/filebeat/certs/


cp -r /etc/elasticsearch/certs/ca/ /etc/filebeat/certs/
cp /etc/elasticsearch/certs/elasticsearch.crt /etc/filebeat/certs/filebeat.crt
cp /etc/elasticsearch/certs/elasticsearch.key /etc/filebeat/certs/filebeat.key
Enable and start the Filebeat service:




systemctl daemon-reload
systemctl enable filebeat
systemctl start filebeat
To ensure that Filebeat has been successfully installed, run the following command:


filebeat test output
This command should have an output like this:

Output
elasticsearch: https://127.0.0.1:9200...
  parse url... OK
  connection...
    parse host... OK
    dns lookup... OK
    addresses: 127.0.0.1
    dial up... OK
  TLS...
    security: server's certificate chain verification is enabled
    handshake... OK
    TLS version: TLSv1.3
    dial up... OK
  talk to server... OK
  version: 7.17.9
Kibana installation and configuration
Kibana is a flexible and intuitive web interface for mining and visualizing the events and archives stored in Elasticsearch.

Install the Kibana package:




yum install kibana-7.17.9
Copy the Elasticsearch certificates into the Kibana configuration folder:


mkdir /etc/kibana/certs/ca -p
cp -R /etc/elasticsearch/certs/ca/ /etc/kibana/certs/
cp /etc/elasticsearch/certs/elasticsearch.key /etc/kibana/certs/kibana.key
cp /etc/elasticsearch/certs/elasticsearch.crt /etc/kibana/certs/kibana.crt
chown -R kibana:kibana /etc/kibana/
chmod -R 500 /etc/kibana/certs
chmod 440 /etc/kibana/certs/ca/ca.* /etc/kibana/certs/kibana.*
Download the Kibana configuration file:


curl -so /etc/kibana/kibana.yml https://packages.wazuh.com/4.4/tpl/elastic-basic/kibana_all_in_one.yml
Edit the /etc/kibana/kibana.yml file:


elasticsearch.password: <elasticsearch_password>
Values to be replaced:

<elasticsearch_password>: the password generated during the Elasticsearch installation and configuration for the elastic user.

Create the /usr/share/kibana/data directory:


mkdir /usr/share/kibana/data
chown -R kibana:kibana /usr/share/kibana
Install the Wazuh Kibana plugin. The installation of the plugin must be done from the Kibana home directory as follows:


cd /usr/share/kibana
sudo -u kibana /usr/share/kibana/bin/kibana-plugin install https://packages.wazuh.com/4.x/ui/kibana/wazuh_kibana-4.4.1_7.17.9-1.zip
Link Kibana's socket to privileged port 443:


setcap 'cap_net_bind_service=+ep' /usr/share/kibana/node/bin/node
Enable and start the Kibana service:



Choose one option according to the OS used:

Debian based OS


update-rc.d kibana defaults 95 10
service kibana start
RPM based OS


chkconfig --add kibana
service kibana start
Access the web interface using the password generated during the Elasticsearch installation process:


URL: https://<wazuh_server_ip>
user: elastic
password: <PASSWORD_elastic>
Upon the first access to Kibana, the browser shows a warning message stating that the certificate was not issued by a trusted authority. An exception can be added in the advanced options of the web browser or, for increased security, the ca.crt file previously generated can be imported to the certificate manager of the browser. Alternatively, a certificate from a trusted authority can be configured.

Disabling repositories
This installation guide describes how to install and configure Wazuh and Elastic Stack by first configuring their repositories.

With each new release of Wazuh or Elastic Stack, the development team at Wazuh thoroughly tests the compatibility of each component and performs necessary adjustments before releasing a new Wazuh Kibana plugin.

We recommend disabling the repositories so that the individual packages will not be updated unintentionally, which could potentially lead to having a version of the Elastic Stack for which the Wazuh integration has not been released yet.




sed -i "s/^enabled=1/enabled=0/" /etc/yum.repos.d/wazuh.repo
sed -i "s/^enabled=1/enabled=0/" /etc/yum.repos.d/elastic.repo
